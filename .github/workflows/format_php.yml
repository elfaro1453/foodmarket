name: Code Quality Check

on: [push, pull_request]
jobs:
    run:
        runs-on: ${{ matrix.operating-system }}
        strategy:
            matrix:
                operating-system: [ubuntu-latest, macos-latest] #windows-latest currently not working
                php-versions: ['8.0']
                composer-options: ['']
                composer-versions: ['composer:v2']
                node-version: ['15']
            fail-fast: false
        name: PHP ${{ matrix.php-versions }} @ ${{ matrix.operating-system }} with ${{ matrix.composer-versions }} ${{ matrix.composer-options }}
        steps:
            - name: Checkout
              uses: actions/checkout@master
            - name: Install PHP
              uses: shivammathur/setup-php@master
              with:
                  php-version: ${{ matrix.php-versions }}
                  tools: ${{ matrix.composer-versions }}
                  extensions: xdebug, mbstring, posix
            - name: Check Versions
              run: |
                php -v
                php -m
                composer --version
            - name: Install Node.js ${{ matrix.node-version }}
              shell: bash -l {0}
              run: |
                nvm install --default ${{ matrix.node-version }}
                dirname "$(npm which)" >> "$GITHUB_PATH"
            - name: Install Node.js dependencies
              run: npm install
            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                  restore-keys: ${{ runner.os }}-composer-
            - name: Install composer dependencies
              run: composer update --prefer-dist --no-progress --no-suggest ${{ matrix.composer-options }}
            - name: Set git variables
              run: |
                git config --global user.email "you@example.com"
                git config --global user.name "Your Name"
            - name: Run Grumphp
              if: runner.os != 'Windows'
              run: php vendor/bin/grumphp run --no-interaction
            - name: Run Eslint fix
              if: runner.os != 'Windows'
              run: node_modules\.bin\eslint --fix resources/
            - name: Laravel PHPUnit
              run: |
                cp .env.example .env
                php artisan key:generate
                php vendor/bin/phpunit
